server:
  port: 8802

spring:
  application:
    name: cloud-stream-consumer
  cloud:
      stream:
        binders: # 在此处配置要绑定的rabbitmq的服务信息；
          defaultRabbit: # 表示定义的名称，用于于binding整合
            type: rabbit # 消息组件类型
            environment: # 设置rabbitmq的相关的环境配置
              spring:
                rabbitmq:
                  host: 8.136.211.134
                  port: 5672
                  username: guest
                  password: guest
        bindings: # 服务的整合处理
          input: # 这个名字是一个通道的名称
            destination: studyExchange # 表示要使用的Exchange名称定义
            content-type: application/json # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
            binder: defaultRabbit # 设置要绑定的消息服务的具体设置
            group: A_Group #<----------------------------------------关键---微服务应用放置于同一个group中，就能够保证消息只会被其中一个应用消费一次，不同的组是可以重复消费的，同一个组内会发生竞争关系，只有其中一个可以消费。

eureka:
  client: # 客户端进行Eureka注册的配置
    service-url:
      defaultZone: http://localhost:7001/eureka
  instance:
    lease-renewal-interval-in-seconds: 2 # 设置心跳的时间间隔（默认是30秒）
    lease-expiration-duration-in-seconds: 5 # 如果现在超过了5秒的间隔（默认是90秒）
    instance-id: receive-8802.com  # 在信息列表时显示主机名称
    prefer-ip-address: true     # 访问的路径变为IP地址



#
#91_Stream之消息持久化
#通过上述，解决了重复消费问题，再看看持久化。
#
#停止8802/8803并去除掉8802的分组group: A_Group，8803的分组group: A_Group没有去掉。
#
#8801先发送4条消息到RabbitMq。
#
#先启动8802，无分组属性配置，后台没有打出来消息。
#
#再启动8803，有分组属性配置，后台打出来了MQ上的消息。(消息持久化体现)
#————————————————
#版权声明：本文为CSDN博主「巨輪」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
#原文链接：https://blog.csdn.net/u011863024/article/details/114298282